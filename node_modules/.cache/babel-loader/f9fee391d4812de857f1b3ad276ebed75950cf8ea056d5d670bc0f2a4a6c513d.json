{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CoursesContainer = _resolveComponent(\"CoursesContainer\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_CoursesContainer, {\n    onToggleCreateCourse: _ctx.toggleCreateCourse,\n    onEditCourse: _ctx.EditCourseForm,\n    onDeleteCourse: _ctx.deleteCourse,\n    courses: $data.courses,\n    onToggleEditCourse: _ctx.toggleEditCourseForm\n  }, null, 8 /* PROPS */, [\"onToggleCreateCourse\", \"onEditCourse\", \"onDeleteCourse\", \"courses\", \"onToggleEditCourse\"]), _withDirectives(_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" <AddTeacherForm @create-teacher=\\\"createTeacher\\\" @toggle-create-teacher=\\\"toggleCreateTeacher\\\"/> \")], 512 /* NEED_PATCH */), [[_vShow, _ctx.showCreateTeacher]]), _withDirectives(_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" <EditTeacherForm @edit-teacher=\\\"EditTeacherForm\\\" @toggle-edit-teacher=\\\"toggleEditTeacherForm\\\" :teacher=\\\"editingTeacher\\\" /> \")], 512 /* NEED_PATCH */), [[_vShow, _ctx.showEditTeacherForm]])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createVNode","_component_CoursesContainer","onToggleCreateCourse","_ctx","toggleCreateCourse","onEditCourse","EditCourseForm","onDeleteCourse","deleteCourse","courses","$data","onToggleEditCourse","toggleEditCourseForm","_createElementVNode","_hoisted_1","_createCommentVNode","showCreateTeacher","_hoisted_2","showEditTeacherForm"],"sources":["C:\\Users\\SimonePiscozzo\\vue-exercise\\src\\views\\CoursesView.vue"],"sourcesContent":["<template>\r\n    <CoursesContainer @toggle-create-course=\"toggleCreateCourse\" @edit-course=\"EditCourseForm\" @delete-course=\"deleteCourse\" :courses=\"courses\" @toggle-edit-course=\"toggleEditCourseForm\" />\r\n      <div class=\"form-container\" v-show=\"showCreateTeacher\">\r\n        <!-- <AddTeacherForm @create-teacher=\"createTeacher\" @toggle-create-teacher=\"toggleCreateTeacher\"/> -->\r\n      </div>\r\n      <div class=\"form-container\" v-show=\"showEditTeacherForm\">\r\n        <!-- <EditTeacherForm @edit-teacher=\"EditTeacherForm\" @toggle-edit-teacher=\"toggleEditTeacherForm\" :teacher=\"editingTeacher\" /> -->\r\n      </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    // import AddTeacherForm from \"../components/AddTeacherForm\"\r\n    import CoursesContainer from \"../components/CoursesContainer\"\r\n    // import EditTeacherForm from \"../components/EditTeacherForm\"\r\n    export default {\r\n        name: \"CoursesView\",\r\n\r\n        components: {\r\n        // AddTeacherForm,\r\n        CoursesContainer,\r\n        // EditTeacherForm,\r\n        },\r\n        data() {\r\n        return {\r\n            courses: [],\r\n            // showCreateTeacher: false,\r\n            // showEditTeacherForm: false,\r\n            // editingTeacher: null\r\n        }\r\n        },\r\n        async created() {\r\n            this.courses = await this.fetchCourses();\r\n        },\r\n        methods: {\r\n        // fetch dei dati nel file db.json dell'array teachers\r\n        async fetchCourses() {\r\n            const res = await fetch(\"http://localhost:5000/courses\")\r\n\r\n            const data = await res.json()\r\n\r\n            return data;\r\n        },\r\n        async fetchCourse(id) {\r\n            const res = await fetch(`http://localhost:5000/courses/${id}`)\r\n\r\n            const data = await res.json()\r\n\r\n            return data\r\n        },\r\n        // async deleteTeacher(id) {\r\n        //     // console.log('task', id);\r\n        //     if(confirm('Are you sure?')) {\r\n                    \r\n        //     const res = await fetch(`http://localhost:5000/teachers/${id}`, {\r\n        //         method: \"DELETE\",\r\n        //     })\r\n\r\n        //     res.status === 200 ? (this.teachers = this.teachers.filter((teacher) => teacher.id !== id)) : alert(\"Error deleting teacher\")\r\n        //     }\r\n        // },\r\n\r\n        // async isEmailExists(email) {\r\n        //     // Effettua una chiamata API per verificare se esiste già un insegnante con la stessa email\r\n        //     const res = await fetch(`http://localhost:5000/teachers?email=${email}`);\r\n        //     const data = await res.json();\r\n\r\n        //     return data.length > 0; // Restituisce true se esiste già un insegnante con la stessa email, altrimenti false\r\n        // },\r\n\r\n        // async isPhoneExists(phonenumber) {\r\n        //     // Effettua una chiamata API per verificare se esiste già un insegnante con lo stesso numero di telefono\r\n        //     const res = await fetch(`http://localhost:5000/teachers?phonenumber=${phonenumber}`);\r\n        //     const data = await res.json();\r\n\r\n        //     return data.length > 0; // Restituisce true se esiste già un insegnante con lo stesso numero di telefono, altrimenti false\r\n        // },\r\n\r\n        // async EditTeacherForm(id, newTeacher) {\r\n        //     const teacherToEdit = await this.fetchTeacher(id);\r\n\r\n        //     // Verifica se esiste già un insegnante con la stessa email\r\n        //     const isEmailExisting = await this.isEmailExists(newTeacher.email);\r\n        //     if (isEmailExisting && newTeacher.email !== teacherToEdit.email) {\r\n        //     alert('Esiste già un insegnante con la stessa email.');\r\n        //     return;\r\n        //     }\r\n\r\n        //     // Verifica se esiste già un insegnante con lo stesso numero di telefono\r\n        //     const isPhoneExisting = await this.isPhoneExists(newTeacher.phonenumber);\r\n        //     if (isPhoneExisting && newTeacher.phonenumber !== teacherToEdit.phonenumber) {\r\n        //     alert('Esiste già un insegnante con lo stesso numero di telefono.');\r\n        //     return;\r\n        //     }\r\n\r\n        //     const upTeacher = {\r\n        //     id: teacherToEdit.id,\r\n        //     ...newTeacher,\r\n        //     };\r\n\r\n        //     const res = await fetch(`http://localhost:5000/teachers/${id}`, {\r\n        //     method: \"PUT\",\r\n        //     headers: {\r\n        //         \"Content-Type\": \"application/json\",\r\n        //     },\r\n        //     body: JSON.stringify(upTeacher),\r\n        //     });\r\n\r\n        //     const data = await res.json();\r\n\r\n        //     // Aggiorna la lista degli insegnanti con il nuovo dato ricevuto dal server\r\n        //     this.teachers = this.teachers.map((teacher) =>\r\n        //     teacher.id === id ? { ...teacher, ...data } : teacher\r\n        //     );\r\n\r\n        //     this.showEditTeacherForm = !this.showEditTeacherForm;\r\n        // },\r\n\r\n        // async createTeacher(teacher) {\r\n        //     // Verifica se esiste già un insegnante con la stessa email\r\n        //     const isEmailExisting = await this.isEmailExists(teacher.email);\r\n        //     if (isEmailExisting) {\r\n        //     alert('Esiste già un insegnante con la stessa email.');\r\n        //     return;\r\n        //     }\r\n\r\n        //     // Verifica se esiste già un insegnante con lo stesso numero di telefono\r\n        //     const isPhoneExisting = await this.isPhoneExists(teacher.phonenumber);\r\n        //     if (isPhoneExisting) {\r\n        //     alert('Esiste già un insegnante con lo stesso numero di telefono.');\r\n        //     return;\r\n        //     }\r\n\r\n        //     const res = await fetch(\"http://localhost:5000/teachers\", {\r\n        //     method: \"POST\",\r\n        //     headers: { \"Content-Type\": \"application/json\" },\r\n        //     body: JSON.stringify(teacher),\r\n        //     });\r\n\r\n        //     const data = await res.json();\r\n\r\n        //     this.teachers = [...this.teachers, data];\r\n        //     this.showForm = !this.showForm;\r\n        //     this.showCreateTeacher = !this.showCreateTeacher;\r\n        // },\r\n        \r\n        // // toggle del form create teacher\r\n        // toggleCreateTeacher() {\r\n        //     this.showCreateTeacher = !this.showCreateTeacher\r\n        // },\r\n\r\n        // toggleEditTeacherForm(teacher) {\r\n        //     this.editingTeacher = teacher;\r\n        //     this.showEditTeacherForm = !this.showEditTeacherForm\r\n        // },\r\n\r\n        // toggleTeachersContainer() {\r\n        //     console.log(this.showTeachersContainer);\r\n        //     if(!this.showTeachersContainer){\r\n        //     this.showTeachersContainer = !this.showTeachersContainer\r\n        //     }\r\n        // },\r\n\r\n        }\r\n    }\r\n</script>\r\n<style>\r\n  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400&display=swap');\r\n    \r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    /* outline: 1px orange solid */\r\n  }\r\n\r\n  body {\r\n    font-family: 'Poppins', sans-serif;\r\n  }\r\n\r\n  .container {\r\n    width: 100%;\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .content-container {\r\n    width: 100%;\r\n    height: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .form-container {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100vh;\r\n    top:0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    row-gap: 50px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0,0,0,0.3);\r\n    backdrop-filter: blur(2px);\r\n  }\r\n\r\n</style>\r\n"],"mappings":";;EAEWA,KAAK,EAAC;AAAgB;;EAGtBA,KAAK,EAAC;AAAgB;;;6DAJ7BC,YAAA,CAAyLC,2BAAA;IAAtKC,oBAAoB,EAAEC,IAAA,CAAAC,kBAAkB;IAAGC,YAAW,EAAEF,IAAA,CAAAG,cAAc;IAAGC,cAAa,EAAEJ,IAAA,CAAAK,YAAY;IAAGC,OAAO,EAAEC,KAAA,CAAAD,OAAO;IAAGE,kBAAkB,EAAER,IAAA,CAAAS;wIAC/JC,mBAAA,CAEM,OAFNC,UAEM,GADJC,mBAAA,wGAAuG,C,mCADrEZ,IAAA,CAAAa,iBAAiB,E,mBAGrDH,mBAAA,CAEM,OAFNI,UAEM,GADJF,mBAAA,sIAAmI,C,mCADjGZ,IAAA,CAAAe,mBAAmB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}