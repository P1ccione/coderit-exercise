{"ast":null,"code":"import Button from \"./Button\";\nexport default {\n  name: \"AddTeacher\",\n  props: {\n    teacher: {\n      type: Object,\n      default: null\n    },\n    fromType: {\n      type: String\n    }\n  },\n  data() {\n    return {\n      formData: {\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        phonenumber: \"\",\n        image: null\n      },\n      fields: [{\n        name: \"firstname\",\n        label: \"First Name\",\n        type: \"text\"\n      }, {\n        name: \"lastname\",\n        label: \"Last Name\",\n        type: \"text\"\n      }, {\n        name: \"email\",\n        label: \"Email\",\n        type: \"email\"\n      }, {\n        name: \"phonenumber\",\n        label: \"Phone Number\",\n        type: \"tel\"\n      }, {\n        name: \"image\",\n        label: \"Teacher Image\",\n        type: \"file\"\n      }]\n    };\n  },\n  components: {\n    Button\n  },\n  methods: {\n    submitForm(e) {\n      e.preventDefault();\n      if (!this.firstname) {\n        alert('Please add the first name');\n        return;\n      } else if (!this.lastname) {\n        alert('Please add the last name');\n        return;\n      } else if (!this.email) {\n        alert('Please add the email address');\n        return;\n      } else if (!this.phonenumber) {\n        alert('Please add the phone number');\n        return;\n      }\n      const newTeacher = {\n        firstname: this.firstname,\n        lastname: this.lastname,\n        email: this.email,\n        phonenumber: this.phonenumber\n      };\n      if (fromType === \"add\") {\n        this.$emit('create-teacher', newTeacher);\n      } else if (formType === \"edit\") {\n        this.$emit('edit-teacher', newTeacher, id);\n      }\n      this.firstname = '';\n      this.lastname = '';\n      this.email = '';\n      this.phonenumber = '';\n    }\n  }\n};","map":{"version":3,"names":["Button","name","props","teacher","type","Object","default","fromType","String","data","formData","firstname","lastname","email","phonenumber","image","fields","label","components","methods","submitForm","e","preventDefault","alert","newTeacher","$emit","formType","id"],"sources":["C:\\Users\\SimonePiscozzo\\vue-exercise\\src\\components\\AddTeacher.vue"],"sourcesContent":["<template>\r\n    <Button @btn-click=\"$emit('toggle-create-teacher')\" text=\"CLOSE FORM\" />\r\n    <form @submit=\"submitForm\">\r\n      <div v-for=\"field in fields\" :key=\"field.name\" class=\"input-container\">\r\n        <label :for=\"field.name\">{{ field.label }}</label>\r\n        <input\r\n          :type=\"field.type\"\r\n          :name=\"field.name\"\r\n          :id=\"field.name\"\r\n          v-model=\"formData[field.name]\"\r\n          v-if=\"teacher && teacher[field.name]\"\r\n          :value=\"teacher[field.name]\"\r\n        />\r\n        <input\r\n          :type=\"field.type\"\r\n          :name=\"field.name\"\r\n          :id=\"field.name\"\r\n          v-model=\"formData[field.name]\"\r\n          v-else\r\n        />\r\n      </div>\r\n      <input type=\"submit\" value=\"CREATE TEACHER\" />\r\n    </form>\r\n  </template>\r\n  \r\n  <script>\r\n  import Button from \"./Button\";\r\n  \r\n  export default {\r\n    name: \"AddTeacher\",\r\n    props: {\r\n      teacher: {\r\n        type: Object,\r\n        default: null,\r\n      },\r\n      fromType: {\r\n        type: String,\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        formData: {\r\n          firstname: \"\",\r\n          lastname: \"\",\r\n          email: \"\",\r\n          phonenumber: \"\",\r\n          image: null,\r\n        },\r\n        fields: [\r\n          { name: \"firstname\", label: \"First Name\", type: \"text\" },\r\n          { name: \"lastname\", label: \"Last Name\", type: \"text\" },\r\n          { name: \"email\", label: \"Email\", type: \"email\" },\r\n          { name: \"phonenumber\", label: \"Phone Number\", type: \"tel\" },\r\n          { name: \"image\", label: \"Teacher Image\", type: \"file\" },\r\n        ],\r\n      };\r\n        },\r\n        components: {\r\n            Button,\r\n        },\r\n        methods:{\r\n            submitForm(e){\r\n                e.preventDefault()\r\n                if(!this.firstname) {\r\n                    alert('Please add the first name')\r\n                    return\r\n                } else if(!this.lastname) {\r\n                    alert('Please add the last name')\r\n                    return\r\n                }else if(!this.email) {\r\n                    alert('Please add the email address')\r\n                    return\r\n                }  else if(!this.phonenumber) {\r\n                    alert('Please add the phone number')\r\n                    return\r\n                }\r\n                const newTeacher = {\r\n                    firstname: this.firstname,\r\n                    lastname: this.lastname,\r\n                    email: this.email,\r\n                    phonenumber: this.phonenumber,\r\n                }\r\n\r\n                if(fromType === \"add\"){\r\n                    this.$emit('create-teacher', newTeacher)\r\n                }else if(formType === \"edit\"){\r\n                    this.$emit('edit-teacher', newTeacher, id)\r\n                }\r\n                \r\n                this.firstname = ''\r\n                this.lastname = ''\r\n                this.email = ''\r\n                this.phonenumber = ''\r\n            }\r\n        }\r\n    }\r\n</script>\r\n             \r\n<style scoped>\r\n    form {\r\n        width: auto;\r\n        min-width: 400px;\r\n        background: ghostwhite;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        height: auto;\r\n        padding-bottom: 40px;\r\n        padding-top: 40px;\r\n        flex-direction: column;\r\n        row-gap: 10px;\r\n        border-radius: 50px;\r\n    }\r\n\r\n    form .input-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    form input {\r\n        width: 200px;\r\n        height: 35px;\r\n        padding-left: 10px;\r\n    }\r\n\r\n    form input[type=\"submit\"] {\r\n        cursor: pointer;\r\n        background-color: black;\r\n        color: white;\r\n        border-radius: 50px;\r\n        outline: none;\r\n        border: none;\r\n        height: 50px;\r\n    }\r\n</style>"],"mappings":"AA0BE,OAAOA,MAAK,MAAO,UAAU;AAE7B,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDC,QAAQ,EAAE;MACRH,IAAI,EAAEI;IACR;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,KAAK,EAAE;MACT,CAAC;MACDC,MAAM,EAAE,CACN;QAAEf,IAAI,EAAE,WAAW;QAAEgB,KAAK,EAAE,YAAY;QAAEb,IAAI,EAAE;MAAO,CAAC,EACxD;QAAEH,IAAI,EAAE,UAAU;QAAEgB,KAAK,EAAE,WAAW;QAAEb,IAAI,EAAE;MAAO,CAAC,EACtD;QAAEH,IAAI,EAAE,OAAO;QAAEgB,KAAK,EAAE,OAAO;QAAEb,IAAI,EAAE;MAAQ,CAAC,EAChD;QAAEH,IAAI,EAAE,aAAa;QAAEgB,KAAK,EAAE,cAAc;QAAEb,IAAI,EAAE;MAAM,CAAC,EAC3D;QAAEH,IAAI,EAAE,OAAO;QAAEgB,KAAK,EAAE,eAAe;QAAEb,IAAI,EAAE;MAAO,CAAC;IAE3D,CAAC;EACC,CAAC;EACDc,UAAU,EAAE;IACRlB;EACJ,CAAC;EACDmB,OAAO,EAAC;IACJC,UAAUA,CAACC,CAAC,EAAC;MACTA,CAAC,CAACC,cAAc,CAAC;MACjB,IAAG,CAAC,IAAI,CAACX,SAAS,EAAE;QAChBY,KAAK,CAAC,2BAA2B;QACjC;MACJ,OAAO,IAAG,CAAC,IAAI,CAACX,QAAQ,EAAE;QACtBW,KAAK,CAAC,0BAA0B;QAChC;MACJ,CAAC,MAAK,IAAG,CAAC,IAAI,CAACV,KAAK,EAAE;QAClBU,KAAK,CAAC,8BAA8B;QACpC;MACJ,OAAQ,IAAG,CAAC,IAAI,CAACT,WAAW,EAAE;QAC1BS,KAAK,CAAC,6BAA6B;QACnC;MACJ;MACA,MAAMC,UAAS,GAAI;QACfb,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,WAAW,EAAE,IAAI,CAACA;MACtB;MAEA,IAAGP,QAAO,KAAM,KAAK,EAAC;QAClB,IAAI,CAACkB,KAAK,CAAC,gBAAgB,EAAED,UAAU;MAC3C,CAAC,MAAK,IAAGE,QAAO,KAAM,MAAM,EAAC;QACzB,IAAI,CAACD,KAAK,CAAC,cAAc,EAAED,UAAU,EAAEG,EAAE;MAC7C;MAEA,IAAI,CAAChB,SAAQ,GAAI,EAAC;MAClB,IAAI,CAACC,QAAO,GAAI,EAAC;MACjB,IAAI,CAACC,KAAI,GAAI,EAAC;MACd,IAAI,CAACC,WAAU,GAAI,EAAC;IACxB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}