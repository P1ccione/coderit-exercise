{"ast":null,"code":"import AddTeacherForm from \"../components/AddTeacherForm\";\nimport TeachersContainer from \"../components/TeachersContainer\";\nimport EditTeacherForm from \"../components/EditTeacherForm\";\nexport default {\n  name: \"TeachersView\",\n  components: {\n    AddTeacherForm,\n    TeachersContainer,\n    EditTeacherForm\n  },\n  async created() {\n    this.teachers = await this.fetchTeachers();\n  },\n  methods: {\n    async fetchTeachers() {\n      const res = await fetch(\"http://localhost:5000/teachers\");\n      const data = await res.json();\n      return data;\n    },\n    async fetchTeacher(id) {\n      const res = await fetch(`http://localhost:5000/teachers/${id}`);\n      const data = await res.json();\n      return data;\n    },\n    async deleteTeacher(id) {\n      // console.log('task', id);\n      if (confirm('Are you sure?')) {\n        const res = await fetch(`http://localhost:5000/teachers/${id}`, {\n          method: \"DELETE\"\n        });\n        res.status === 200 ? this.teachers = this.teachers.filter(teacher => teacher.id !== id) : alert(\"Error deleting teacher\");\n      }\n    },\n    async EditTeacherForm(id, newTeacher) {\n      const teacherToEdit = await this.fetchTeacher(id);\n      const upTeacher = {\n        id: teacherToEdit.id,\n        ...newTeacher\n      };\n      const res = await fetch(`http://localhost:5000/teachers/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(upTeacher)\n      });\n      const data = await res.json();\n\n      // Aggiorna la lista degli insegnanti con il nuovo dato ricevuto dal server\n      this.teachers = this.teachers.map(teacher => teacher.id === id ? {\n        ...teacher,\n        ...data\n      } : teacher);\n      this.showEditTeacherForm = !this.showEditTeacherForm;\n    },\n    async createTeacher(teacher) {\n      const res = await fetch(\"http://localhost:5000/teachers\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(teacher)\n      });\n      const data = await res.json();\n      this.teachers = [...this.teachers, data];\n      this.showForm = !this.showForm;\n      this.showCreateTeacher = !this.showCreateTeacher;\n    }\n  }\n};","map":{"version":3,"names":["AddTeacherForm","TeachersContainer","EditTeacherForm","name","components","created","teachers","fetchTeachers","methods","res","fetch","data","json","fetchTeacher","id","deleteTeacher","confirm","method","status","filter","teacher","alert","newTeacher","teacherToEdit","upTeacher","headers","body","JSON","stringify","map","showEditTeacherForm","createTeacher","showForm","showCreateTeacher"],"sources":["C:\\Users\\SimonePiscozzo\\vue-exercise\\src\\views\\TeachersView.vue"],"sourcesContent":["<template>\r\n    <TeachersContainer v-show=\"showTeachersContainer\" @toggle-create-teacher=\"toggleCreateTeacher\" @edit-teacher=\"EditTeacherForm\" @delete-teacher=\"deleteTeacher\" :teachers=\"teachers\" @toggle-edit-teacher=\"toggleEditTeacherForm\" />\r\n      <div class=\"form-container\" v-show=\"showCreateTeacher\">\r\n        <AddTeacherForm @create-teacher=\"createTeacher\" @toggle-create-teacher=\"toggleCreateTeacher\"/>\r\n      </div>\r\n      <div class=\"form-container\" v-show=\"showEditTeacherForm\">\r\n        <EditTeacherForm @edit-teacher=\"EditTeacherForm\" @toggle-edit-teacher=\"toggleEditTeacherForm\" :teacher=\"editingTeacher\" />\r\n      </div>\r\n</template>\r\n\r\n<script>\r\n    import AddTeacherForm from \"../components/AddTeacherForm\"\r\n    import TeachersContainer from \"../components/TeachersContainer\"\r\n    import EditTeacherForm from \"../components/EditTeacherForm\"\r\n\r\n    export default {\r\n        name: \"TeachersView\",\r\n        components: {\r\n            AddTeacherForm,\r\n            TeachersContainer,\r\n            EditTeacherForm,\r\n        },\r\n        async created() {\r\n            this.teachers = await this.fetchTeachers();\r\n        },\r\n        methods: {\r\n            async fetchTeachers() {\r\n                const res = await fetch(\"http://localhost:5000/teachers\")\r\n\r\n                const data = await res.json()\r\n\r\n                return data;\r\n            },\r\n            async fetchTeacher(id) {\r\n                const res = await fetch(`http://localhost:5000/teachers/${id}`)\r\n\r\n                const data = await res.json()\r\n\r\n                return data\r\n            },\r\n            async deleteTeacher(id) {\r\n                // console.log('task', id);\r\n                if(confirm('Are you sure?')) {\r\n                        \r\n                const res = await fetch(`http://localhost:5000/teachers/${id}`, {\r\n                    method: \"DELETE\",\r\n                })\r\n\r\n                res.status === 200 ? (this.teachers = this.teachers.filter((teacher) => teacher.id !== id)) : alert(\"Error deleting teacher\")\r\n                }\r\n            },\r\n            async EditTeacherForm(id, newTeacher) {\r\n                const teacherToEdit = await this.fetchTeacher(id);\r\n\r\n                const upTeacher = {\r\n                    id: teacherToEdit.id,\r\n                    ...newTeacher,\r\n                };\r\n\r\n                const res = await fetch(`http://localhost:5000/teachers/${id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify(upTeacher),\r\n                });\r\n\r\n                const data = await res.json();\r\n\r\n                // Aggiorna la lista degli insegnanti con il nuovo dato ricevuto dal server\r\n                this.teachers = this.teachers.map((teacher) =>\r\n                    teacher.id === id ? { ...teacher, ...data } : teacher\r\n                );\r\n                \r\n                this.showEditTeacherForm = !this.showEditTeacherForm\r\n            },\r\n            async createTeacher(teacher) {\r\n                const res = await fetch(\"http://localhost:5000/teachers\", {\r\n                    method: \"POST\",\r\n                    headers: {\"Content-Type\": \"application/json\"},\r\n                    body: JSON.stringify(teacher),\r\n                })\r\n\r\n                const data = await res.json()\r\n\r\n                this.teachers = [...this.teachers, data]\r\n                this.showForm = !this.showForm\r\n                this.showCreateTeacher = !this.showCreateTeacher\r\n            },\r\n            \r\n        }\r\n\r\n    }\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}