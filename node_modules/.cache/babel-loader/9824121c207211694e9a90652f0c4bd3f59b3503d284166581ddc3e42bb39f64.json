{"ast":null,"code":"import { resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TeachersContainer = _resolveComponent(\"TeachersContainer\");\n  const _component_AddTeacherForm = _resolveComponent(\"AddTeacherForm\");\n  const _component_EditTeacherForm = _resolveComponent(\"EditTeacherForm\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createVNode(_component_TeachersContainer, {\n    onToggleCreateTeacher: $options.toggleCreateTeacher,\n    onEditTeacher: $options.EditTeacherForm,\n    onDeleteTeacher: $options.deleteTeacher,\n    teachers: $data.teachers,\n    onToggleEditTeacher: $options.toggleEditTeacherForm\n  }, null, 8 /* PROPS */, [\"onToggleCreateTeacher\", \"onEditTeacher\", \"onDeleteTeacher\", \"teachers\", \"onToggleEditTeacher\"]), [[_vShow, $data.showTeachersContainer]]), _withDirectives(_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_AddTeacherForm, {\n    onCreateTeacher: $options.createTeacher,\n    onToggleCreateTeacher: $options.toggleCreateTeacher\n  }, null, 8 /* PROPS */, [\"onCreateTeacher\", \"onToggleCreateTeacher\"])], 512 /* NEED_PATCH */), [[_vShow, $data.showCreateTeacher]]), _withDirectives(_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_EditTeacherForm, {\n    onEditTeacher: $options.EditTeacherForm,\n    onToggleEditTeacher: $options.toggleEditTeacherForm,\n    teacher: $data.editingTeacher\n  }, null, 8 /* PROPS */, [\"onEditTeacher\", \"onToggleEditTeacher\", \"teacher\"])], 512 /* NEED_PATCH */), [[_vShow, $data.showEditTeacherForm]])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createVNode","_component_TeachersContainer","onToggleCreateTeacher","$options","toggleCreateTeacher","onEditTeacher","EditTeacherForm","onDeleteTeacher","deleteTeacher","teachers","$data","onToggleEditTeacher","toggleEditTeacherForm","showTeachersContainer","_createElementVNode","_hoisted_1","_component_AddTeacherForm","onCreateTeacher","createTeacher","showCreateTeacher","_hoisted_2","_component_EditTeacherForm","teacher","editingTeacher","showEditTeacherForm"],"sources":["C:\\Users\\SimonePiscozzo\\vue-exercise\\src\\views\\TeachersView.vue"],"sourcesContent":["<template>\r\n    <TeachersContainer v-show=\"showTeachersContainer\" @toggle-create-teacher=\"toggleCreateTeacher\" @edit-teacher=\"EditTeacherForm\" @delete-teacher=\"deleteTeacher\" :teachers=\"teachers\" @toggle-edit-teacher=\"toggleEditTeacherForm\" />\r\n      <div class=\"form-container\" v-show=\"showCreateTeacher\">\r\n        <AddTeacherForm @create-teacher=\"createTeacher\" @toggle-create-teacher=\"toggleCreateTeacher\"/>\r\n      </div>\r\n      <div class=\"form-container\" v-show=\"showEditTeacherForm\">\r\n        <EditTeacherForm @edit-teacher=\"EditTeacherForm\" @toggle-edit-teacher=\"toggleEditTeacherForm\" :teacher=\"editingTeacher\" />\r\n      </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport AddTeacherForm from \"../components/AddTeacherForm\"\r\n  import TeachersContainer from \"../components/TeachersContainer\"\r\n  import EditTeacherForm from \"../components/EditTeacherForm\"\r\n    export default {\r\n        TeachersView,\r\n\r\n    components: {\r\n      Header,\r\n      AddTeacherForm,\r\n      TeachersContainer,\r\n      EditTeacherForm,\r\n    },\r\n    data() {\r\n      return {\r\n        teachers: [],\r\n        showCreateTeacher: false,\r\n        showEditTeacherForm: false,\r\n        showTeachersContainer: true,\r\n        editingTeacher: null\r\n      }\r\n    },\r\n    async created() {\r\n      this.teachers = await this.fetchTeachers();\r\n    },\r\n    methods: {\r\n      // fetch dei dati nel file db.json dell'array teachers\r\n      async fetchTeachers() {\r\n        const res = await fetch(\"http://localhost:5000/teachers\")\r\n\r\n        const data = await res.json()\r\n\r\n        return data;\r\n      },\r\n      async fetchTeacher(id) {\r\n        const res = await fetch(`http://localhost:5000/teachers/${id}`)\r\n\r\n        const data = await res.json()\r\n\r\n        return data\r\n      },\r\n      async deleteTeacher(id) {\r\n        // console.log('task', id);\r\n        if(confirm('Are you sure?')) {\r\n                \r\n          const res = await fetch(`http://localhost:5000/teachers/${id}`, {\r\n            method: \"DELETE\",\r\n          })\r\n\r\n          res.status === 200 ? (this.teachers = this.teachers.filter((teacher) => teacher.id !== id)) : alert(\"Error deleting teacher\")\r\n        }\r\n      },\r\n\r\n      async isEmailExists(email) {\r\n        // Effettua una chiamata API per verificare se esiste già un insegnante con la stessa email\r\n        const res = await fetch(`http://localhost:5000/teachers?email=${email}`);\r\n        const data = await res.json();\r\n\r\n        return data.length > 0; // Restituisce true se esiste già un insegnante con la stessa email, altrimenti false\r\n      },\r\n\r\n      async isPhoneExists(phonenumber) {\r\n        // Effettua una chiamata API per verificare se esiste già un insegnante con lo stesso numero di telefono\r\n        const res = await fetch(`http://localhost:5000/teachers?phonenumber=${phonenumber}`);\r\n        const data = await res.json();\r\n\r\n        return data.length > 0; // Restituisce true se esiste già un insegnante con lo stesso numero di telefono, altrimenti false\r\n      },\r\n\r\n      async EditTeacherForm(id, newTeacher) {\r\n        const teacherToEdit = await this.fetchTeacher(id);\r\n\r\n        // Verifica se esiste già un insegnante con la stessa email\r\n        const isEmailExisting = await this.isEmailExists(newTeacher.email);\r\n        if (isEmailExisting && newTeacher.email !== teacherToEdit.email) {\r\n          alert('Esiste già un insegnante con la stessa email.');\r\n          return;\r\n        }\r\n\r\n        // Verifica se esiste già un insegnante con lo stesso numero di telefono\r\n        const isPhoneExisting = await this.isPhoneExists(newTeacher.phonenumber);\r\n        if (isPhoneExisting && newTeacher.phonenumber !== teacherToEdit.phonenumber) {\r\n          alert('Esiste già un insegnante con lo stesso numero di telefono.');\r\n          return;\r\n        }\r\n\r\n        const upTeacher = {\r\n          id: teacherToEdit.id,\r\n          ...newTeacher,\r\n        };\r\n\r\n        const res = await fetch(`http://localhost:5000/teachers/${id}`, {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(upTeacher),\r\n        });\r\n\r\n        const data = await res.json();\r\n\r\n        // Aggiorna la lista degli insegnanti con il nuovo dato ricevuto dal server\r\n        this.teachers = this.teachers.map((teacher) =>\r\n          teacher.id === id ? { ...teacher, ...data } : teacher\r\n        );\r\n\r\n        this.showEditTeacherForm = !this.showEditTeacherForm;\r\n      },\r\n\r\n      async createTeacher(teacher) {\r\n        // Verifica se esiste già un insegnante con la stessa email\r\n        const isEmailExisting = await this.isEmailExists(teacher.email);\r\n        if (isEmailExisting) {\r\n          alert('Esiste già un insegnante con la stessa email.');\r\n          return;\r\n        }\r\n\r\n        // Verifica se esiste già un insegnante con lo stesso numero di telefono\r\n        const isPhoneExisting = await this.isPhoneExists(teacher.phonenumber);\r\n        if (isPhoneExisting) {\r\n          alert('Esiste già un insegnante con lo stesso numero di telefono.');\r\n          return;\r\n        }\r\n\r\n        const res = await fetch(\"http://localhost:5000/teachers\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(teacher),\r\n        });\r\n\r\n        const data = await res.json();\r\n\r\n        this.teachers = [...this.teachers, data];\r\n        this.showForm = !this.showForm;\r\n        this.showCreateTeacher = !this.showCreateTeacher;\r\n      },\r\n      \r\n      // toggle del form create teacher\r\n      toggleCreateTeacher() {\r\n        this.showCreateTeacher = !this.showCreateTeacher\r\n      },\r\n\r\n      toggleEditTeacherForm(teacher) {\r\n        this.editingTeacher = teacher;\r\n        this.showEditTeacherForm = !this.showEditTeacherForm\r\n      },\r\n\r\n      toggleTeachersContainer() {\r\n        console.log(this.showTeachersContainer);\r\n        if(!this.showTeachersContainer){\r\n          this.showTeachersContainer = !this.showTeachersContainer\r\n        }\r\n      },\r\n\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400&display=swap');\r\n    \r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    /* outline: 1px orange solid */\r\n  }\r\n\r\n  body {\r\n    font-family: 'Poppins', sans-serif;\r\n  }\r\n\r\n  .container {\r\n    width: 100%;\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .content-container {\r\n    width: 100%;\r\n    height: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .form-container {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100vh;\r\n    top:0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    row-gap: 50px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0,0,0,0.3);\r\n    backdrop-filter: blur(2px);\r\n  }\r\n\r\n</style>\r\n"],"mappings":";;EAEWA,KAAK,EAAC;AAAgB;;EAGtBA,KAAK,EAAC;AAAgB;;;;;6EAJ7BC,YAAA,CAAmOC,4BAAA;IAAhLC,qBAAqB,EAAEC,QAAA,CAAAC,mBAAmB;IAAGC,aAAY,EAAEF,QAAA,CAAAG,eAAe;IAAGC,eAAc,EAAEJ,QAAA,CAAAK,aAAa;IAAGC,QAAQ,EAAEC,KAAA,CAAAD,QAAQ;IAAGE,mBAAmB,EAAER,QAAA,CAAAS;uIAA/KF,KAAA,CAAAG,qBAAqB,E,mBAC9CC,mBAAA,CAEM,OAFNC,UAEM,GADJf,YAAA,CAA8FgB,yBAAA;IAA7EC,eAAc,EAAEd,QAAA,CAAAe,aAAa;IAAGhB,qBAAqB,EAAEC,QAAA,CAAAC;2GADtCM,KAAA,CAAAS,iBAAiB,E,mBAGrDL,mBAAA,CAEM,OAFNM,UAEM,GADJpB,YAAA,CAA0HqB,0BAAA;IAAxGhB,aAAY,EAAEF,QAAA,CAAAG,eAAe;IAAGK,mBAAmB,EAAER,QAAA,CAAAS,qBAAqB;IAAGU,OAAO,EAAEZ,KAAA,CAAAa;kHADtEb,KAAA,CAAAc,mBAAmB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}