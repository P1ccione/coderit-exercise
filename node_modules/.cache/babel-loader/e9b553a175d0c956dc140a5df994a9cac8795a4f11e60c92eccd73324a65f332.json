{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CoursesContainer = _resolveComponent(\"CoursesContainer\");\n  const _component_AddCourseForm = _resolveComponent(\"AddCourseForm\");\n  const _component_EditCourseForm = _resolveComponent(\"EditCourseForm\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_CoursesContainer, {\n    onToggleCreateCourse: $options.toggleCreateCourse,\n    onEditCourse: $options.EditCourseForm,\n    onDeleteCourse: $options.deleteCourse,\n    courses: $data.courses,\n    onToggleEditCourse: $options.toggleEditCourseForm\n  }, null, 8 /* PROPS */, [\"onToggleCreateCourse\", \"onEditCourse\", \"onDeleteCourse\", \"courses\", \"onToggleEditCourse\"]), _withDirectives(_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_AddCourseForm, {\n    onCreateCourse: $options.createCourse,\n    onToggleCreateCourse: $options.toggleCreateCourse\n  }, null, 8 /* PROPS */, [\"onCreateCourse\", \"onToggleCreateCourse\"])], 512 /* NEED_PATCH */), [[_vShow, $data.showCreateCourse]]), _withDirectives(_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_EditCourseForm, {\n    onEditTeacher: $options.EditCourseForm,\n    onToggleEditCourse: $options.toggleEditCourseForm,\n    course: $data.editingCourse\n  }, null, 8 /* PROPS */, [\"onEditTeacher\", \"onToggleEditCourse\", \"course\"])], 512 /* NEED_PATCH */), [[_vShow, _ctx.showEditTeacherForm]])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createVNode","_component_CoursesContainer","onToggleCreateCourse","$options","toggleCreateCourse","onEditCourse","EditCourseForm","onDeleteCourse","deleteCourse","courses","$data","onToggleEditCourse","toggleEditCourseForm","_createElementVNode","_hoisted_1","_component_AddCourseForm","onCreateCourse","createCourse","showCreateCourse","_hoisted_2","_component_EditCourseForm","onEditTeacher","course","editingCourse","_ctx","showEditTeacherForm"],"sources":["C:\\Users\\SimonePiscozzo\\vue-exercise\\src\\views\\CoursesView.vue"],"sourcesContent":["<template>\r\n    <CoursesContainer @toggle-create-course=\"toggleCreateCourse\" @edit-course=\"EditCourseForm\" @delete-course=\"deleteCourse\" :courses=\"courses\" @toggle-edit-course=\"toggleEditCourseForm\" />\r\n      <div class=\"form-container\" v-show=\"showCreateCourse\">\r\n        <AddCourseForm @create-course=\"createCourse\" @toggle-create-course=\"toggleCreateCourse\"/>\r\n      </div>\r\n      <div class=\"form-container\" v-show=\"showEditTeacherForm\">\r\n        <EditCourseForm @edit-teacher=\"EditCourseForm\" @toggle-edit-course=\"toggleEditCourseForm\" :course=\"editingCourse\" />\r\n      </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import AddCourseForm from \"../components/AddCourseForm\"\r\n    import CoursesContainer from \"../components/CoursesContainer\"\r\n    import EditCourseForm from \"../components/EditCourseForm\"\r\n    export default {\r\n        name: \"CoursesView\",\r\n\r\n        components: {\r\n        AddCourseForm,\r\n        CoursesContainer,\r\n        EditCourseForm,\r\n        },\r\n        data() {\r\n        return {\r\n            courses: [],\r\n            showCreateCourse: false,\r\n            showEditCourseForm: false,\r\n            editingCourse: null\r\n        }\r\n        },\r\n        async created() {\r\n            this.courses = await this.fetchCourses();\r\n        },\r\n        methods: {\r\n        // fetch dei dati nel file db.json dell'array teachers\r\n        async fetchCourses() {\r\n            const res = await fetch(\"http://localhost:5000/courses\")\r\n\r\n            const data = await res.json()\r\n\r\n            return data;\r\n        },\r\n        async fetchCourse(id) {\r\n            const res = await fetch(`http://localhost:5000/courses/${id}`)\r\n\r\n            const data = await res.json()\r\n\r\n            return data\r\n        },\r\n        async deleteCourse(id) {\r\n            // console.log('task', id);\r\n            if(confirm('Are you sure?')) {\r\n                    \r\n            const res = await fetch(`http://localhost:5000/courses/${id}`, {\r\n                method: \"DELETE\",\r\n            })\r\n\r\n            res.status === 200 ? (this.courses = this.courses.filter((course) => course.id !== id)) : alert(\"Error deleting course\")\r\n            }\r\n        },\r\n\r\n        async isCourseExists(coursename) {\r\n            // Effettua una chiamata API per verificare se esiste già un corso con lo stesso nome\r\n            const res = await fetch(`http://localhost:5000/courses?coursename=${coursename}`);\r\n            const data = await res.json();\r\n\r\n            return data.length > 0; // Restituisce true se esiste già un corso con lo stesso nome, altrimenti false\r\n        },\r\n\r\n        async EditCourseForm(id, newCourse) {\r\n            const courseToEdit = await this.fetchCourse(id);\r\n\r\n            // Verifica se esiste già un corso con lo stesso nome\r\n            const isCourseExisting = await this.isCourseExists(course.coursename);\r\n            if (isCourseExisting) {\r\n                alert('Esiste già un corso con lo stesso nome.');\r\n                return;\r\n            }\r\n\r\n            const upCourse = {\r\n            id: courseToEdit.id,\r\n            ...newCourse,\r\n            };\r\n\r\n            const res = await fetch(`http://localhost:5000/courses/${id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(upCourse),\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            // Aggiorna la lista degli insegnanti con il nuovo dato ricevuto dal server\r\n            this.courses = this.courses.map((course) =>\r\n            course.id === id ? { ...course, ...data } : course\r\n            );\r\n\r\n            this.showEditCourseForm = !this.showEditCourseForm\r\n        },\r\n\r\n        async createCourse(course) {\r\n            // Verifica se esiste già un corso con lo stesso nome\r\n            const isCourseExisting = await this.isCourseExists(course.coursename);\r\n            if (isCourseExisting) {\r\n                alert('Esiste già un corso con lo stesso nome.');\r\n                return;\r\n            }\r\n\r\n            const res = await fetch(\"http://localhost:5000/courses\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(course),\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            this.courses = [...this.courses, data];\r\n            this.showCreateCourse = !this.showCreateCourse;\r\n        },\r\n        \r\n        // toggle del form create course\r\n        toggleCreateCourse() {\r\n            this.showCreateCourse = !this.showCreateCourse\r\n        },\r\n\r\n        toggleEditCourseForm(course) {\r\n            this.editingCourse = course;\r\n            this.showEditCourseForm = !this.showEditCourseForm\r\n        },\r\n\r\n        }\r\n    }\r\n</script>\r\n<style>\r\n  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400&display=swap');\r\n    \r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    /* outline: 1px orange solid */\r\n  }\r\n\r\n  body {\r\n    font-family: 'Poppins', sans-serif;\r\n  }\r\n\r\n  .container {\r\n    width: 100%;\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .content-container {\r\n    width: 100%;\r\n    height: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .form-container {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100vh;\r\n    top:0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    row-gap: 50px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0,0,0,0.3);\r\n    backdrop-filter: blur(2px);\r\n  }\r\n\r\n</style>\r\n"],"mappings":";;EAEWA,KAAK,EAAC;AAAgB;;EAGtBA,KAAK,EAAC;AAAgB;;;;;6DAJ7BC,YAAA,CAAyLC,2BAAA;IAAtKC,oBAAoB,EAAEC,QAAA,CAAAC,kBAAkB;IAAGC,YAAW,EAAEF,QAAA,CAAAG,cAAc;IAAGC,cAAa,EAAEJ,QAAA,CAAAK,YAAY;IAAGC,OAAO,EAAEC,KAAA,CAAAD,OAAO;IAAGE,kBAAkB,EAAER,QAAA,CAAAS;wIAC/JC,mBAAA,CAEM,OAFNC,UAEM,GADJd,YAAA,CAAyFe,wBAAA;IAAzEC,cAAa,EAAEb,QAAA,CAAAc,YAAY;IAAGf,oBAAoB,EAAEC,QAAA,CAAAC;yGADlCM,KAAA,CAAAQ,gBAAgB,E,mBAGpDL,mBAAA,CAEM,OAFNM,UAEM,GADJnB,YAAA,CAAoHoB,yBAAA;IAAnGC,aAAY,EAAElB,QAAA,CAAAG,cAAc;IAAGK,kBAAkB,EAAER,QAAA,CAAAS,oBAAoB;IAAGU,MAAM,EAAEZ,KAAA,CAAAa;gHADjEC,IAAA,CAAAC,mBAAmB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}