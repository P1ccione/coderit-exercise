{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-015de462\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"button\", {\n    style: _normalizeStyle({\n      width: $props.btnwidth,\n      height: $props.btnheight\n    }),\n    onClick: _cache[0] || (_cache[0] = $event => $options.onClick()),\n    class: \"btn\"\n  }, [$props.icon ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, _toDisplayString($props.icon), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" \" + _toDisplayString($props.text), 1 /* TEXT */)], 4 /* STYLE */);\n}","map":{"version":3,"names":["_createElementBlock","style","_normalizeStyle","width","$props","btnwidth","height","btnheight","onClick","_cache","$event","$options","class","icon","_hoisted_1","_toDisplayString","text"],"sources":["C:\\Users\\SimonePiscozzo\\vue-exercise\\src\\components\\Button.vue"],"sourcesContent":["<template>\r\n    <button :style=\"{width: btnwidth, height: btnheight}\" @click=\"onClick()\" class=\"btn\">\r\n        <span v-if=\"icon\">{{ icon }}</span>\r\n        {{ text }}\r\n    </button>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"Button\",\r\n    props: {\r\n        text: {\r\n            type: String\r\n        },\r\n        btnheight: {\r\n            type: String,\r\n            default: \"50px\"\r\n        },\r\n        btnwidth: {\r\n            type: String,\r\n            default: \"200px\"\r\n        },\r\n        icon: {\r\n            // Aggiungi la prop icon di tipo qualsiasi (Any) o del tipo specifico che si aspetta EditIcon\r\n        }\r\n    },\r\n    methods: {\r\n        onClick() {\r\n            this.$emit('btn-click');\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .btn {\r\n        /* outline: 1px orange solid; */\r\n        border-radius: 100px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        background: black;\r\n        cursor: pointer;\r\n        outline: none;\r\n        border: none;\r\n        padding-left: 10px;\r\n        padding-right: 10px;\r\n        color: white\r\n    }\r\n\r\n</style>"],"mappings":";;;;;;uBACIA,mBAAA,CAGS;IAHAC,KAAK,EAAAC,eAAA;MAAAC,KAAA,EAAUC,MAAA,CAAAC,QAAQ;MAAAC,MAAA,EAAUF,MAAA,CAAAG;IAAS;IAAIC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAH,OAAO;IAAII,KAAK,EAAC;MAC/DR,MAAA,CAAAS,IAAI,I,cAAhBb,mBAAA,CAAmC,QAAAc,UAAA,EAAAC,gBAAA,CAAdX,MAAA,CAAAS,IAAI,oB,oDAAU,GACnC,GAAAE,gBAAA,CAAGX,MAAA,CAAAY,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}